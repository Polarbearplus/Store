<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace属性：用于指定当前映射文件和哪个接口进行映射，需要指定接口的文件路径，
需要标注包的完整路径接口-->
<mapper namespace="com.cy.store.mapper.UserMapper">
<!--    自定义映射规则：resultMap标签
        id:标签给这个映射分配一个唯一id
        type:取值是一个类，表示数据库中的查询结果与Java中哪个实体类进行结果映射
        -->
    <resultMap id="UserEntityMap" type="com.cy.store.entity.User">
<!--        把不一样的字段进行匹配指定  但主键不可以省略-->
        <id column="uid" property="uid"></id>
        <result column="is_delete" property="isDelete"></result>
        <result column="created_user" property="createdUser"></result>
        <result column="created_time" property="createdTime"></result>
        <result column="modified_user" property="modifiedUser"></result>
        <result column="modified_time" property="modifiedTime"></result>
    </resultMap>
<!--    id:表示映射接口中方法的名称
        useGeneratedKeys:表示开启某个字段的值递增（主键设置为递增）
        keyProperty：标签中将表中的哪个字段作为主键进行递增
    -->
    <insert id = "insert" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO t_user(
	    username,password,salt,phone,email,gender,avatar,
	    is_delete,created_user,created_time,modified_user,modified_time
        ) VALUES (
        #{username},#{password},#{salt},#{phone},#{email},#{gender},#{avatar},
        #{isDelete},#{createdUser},#{createdTime},#{modifiedUser},#{modifiedTime}
        )
    </insert>
    <update id="updatePasswordByUid">
        UPDATE t_user
        SET
            password = #{password},
            modified_user = #{modifiedUser},
            modified_time = #{modifiedTime}
        WHERE uid = #{uid}
    </update>
    <update id="updateInfoByUid">
        UPDATE t_user
        SET
--         表示条件标签  test接受一个返回值为boolean类型的条件
--          如果test为true才会执行标签内部语句
        <if test="phone != null ">phone = #{phone},</if>
        <if test="email != null">email = #{email},</if>
        <if test="gender != null">gender = #{gender},</if>
        modified_user = #{modifiedUser},
        modified_time = #{modifiedTime}
        where uid = #{uid}
    </update>
    <update id="updateAvatarByUid">
        UPDATE t_user
        SET
        avatar = #{avatar},
        modified_user = #{modifiedUser},
        modified_time = #{modifiedTime}
        WHERE
        uid = #{uid}
    </update>

    <!-- select在执行的时候，查询的结果是一个对象，多个对象   -->
<!--
    resultType：表示结果集类型，只需要指定对应映射类的类型，并且包含完整包接口
    resultType="com.cy.store.entity.User"
    但是上述方法资源和类的对象属性字段名一致
    resultMap：当表的资源和类的对象属性字段名不一致时，来自定义查询结果的映射规则
    （放在所有查询语句前）
-->
    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE username = #{username}
    </select>
    <select id="findByUid" resultMap="UserEntityMap">
        SELECT * from t_user WHERE uid = #{uid};
    </select>

</mapper>